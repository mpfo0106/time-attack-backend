// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int        @id @default(autoincrement())
  content   String
  comments  Comment[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  author    User       @relation(fields: [authorId], references: [id])
  authorId  String
  BookMark  BookMark[]
}

model User {
  id                String       @id
  email             String       @unique
  encryptedPassword String
  profile           UserProfile?
  createdAt         DateTime     @default(now())
  writtenPosts      Post[]
  writtenComments   Comment[]

  bookMarks BookMark[]
  followers Follows[]  @relation("following")
  following Follows[]  @relation("follower")
}

model UserProfile {
  userId    String   @id
  user      User     @relation(fields: [userId], references: [id])
  nickname  String   @unique
  oneLiner  String?
  updatedAt DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @map("userId")
}

model BookMark {
  id        Int      @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Follows {
  follower    User   @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@unique([followerId, followingId])
  @@map("Follow")
}
